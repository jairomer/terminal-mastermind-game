@startuml

class App {
    void main()
}

App --* "1" TerminalMastermind.ConsoleController

package TerminalMastermind {
    class CodeToStringAdapter {
        + {static} boolean isValidColorString(String input);
        + {static} Combination getCombinationFromString(String input);
        + {static} String getStringFromCombination(Combination combo)
        + {static} String getFeedbackString(FeedbackCode);
    }

    class ConsoleController {
        + void startGameLoop();
        - String getNewCombination();
        - void printErrorWrongLength();
        - void printErrorWrongColors();
        - void printWinning();
        - void printLossing();
        - boolean askResumeGame();
    }

    ConsoleController --> CodeToStringAdapter
    ConsoleController -* "1" Mastermind.Board
    ConsoleController ..> Mastermind.Combination
    ConsoleController ..> Mastermind.FeedbackCode
    CodeToStringAdapter  ..> Mastermind.Combination
    CodeToStringAdapter  ..> Mastermind.Color

}

package Mastermind {

    class Board {
        - List<Combination>  pCombinations;
        - List<FeedbackCode> feedbackCodes;
        - Combination secret;
        - int attempts = 0;
        + FeedbackCode pushNewCombination(Combination c);
        + List<Combinations> getBoardCombinations();
        + List<FeedbackCode> getFeedbackCodes();
    }

    Board --* "1..n" Combination
    Board --* "0..n" FeedbackCode
    Board ..> SecretFactory

    class Code {
        - List<Color> combination;
        + List<Color> getColors();
        + boolean equals (Code code);
        + int getlength();
    }

    Combination --|> Code
    FeedbackCode --|> Code

    class Combination {
        + Combination Combination(List<Color> colors);
        + FeedbackCode getFeedBackFromSecret(Combination secret);
    }

    Combination ...> FeedbackCode
    Combination ...o "1..n" Color

    class FeedbackCode {
        + FeedbackCode FeedbackCode(List<Color> Colors);
        + booleanisAllBlacks();
    }

    FeedbackCode .o "1..n" Color

    enum Color {
        WHITE
        BLACK
        NULL
        RED
        BLUE
        YELLOW
        GREEN
        ORANGE
        PURPLE
    }

    class SecretFactory {
        - RandomNumberGenerator r;
        + Combination generateSecret();
    }

    SecretFactory ..> Combination

}

@enduml